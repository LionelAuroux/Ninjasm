;>> import sys
;>> from ninjasm.asm import *
;>> print('This Part is in python')
;>> print(f"So we have full access to python loaded in {sys.path}")
;>> # Comment in generated file

;>- format('elf64')

;>- section('.text')
section .text

;>- public('_start')
;>- extern('_start')
;>- include('something.nja')
    global _start
    _start:

;>> a = f"""
        mov rax, 1          ; system call for write
        mov rdi, 1          ; file descriptor for STDOUT
        mov rsi, msg        ; address of string
        mov rdx, len        ; len
        syscall

        mov rax, 60
        xor rdi, rdi
        syscall
        

;>> """
;>> ass = Asm(a)
;>> ass.assemble()
;>> ass.resolve()
        
{ass.to_asm(for_asm=True)}

;>- section('.data')
section .data

        msg db "Hello, World", 0xa
        len equ $-msg

;>> for it in range(10):
    static .data{it} ; voir le support de static
    .data{it} db {10+it}
;>> #endfor
